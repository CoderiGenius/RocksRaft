syntax = "proto3";
option java_package = "rpc";
package protobuf;
option java_outer_classname = "RpcRequests";
import "raft.proto";

message PingRequest {
    int64 send_timestamp = 1;
}
enum AppendEntriesStatus{
     APPROVED = 0;
     FAILED = 1;
}
message AppendEntriesRequests{
     repeated AppendEntriesRequest args = 1;


}

message AppendEntriesResponses{
     repeated AppendEntriesResponse args = 1;
     AppendEntriesStatus appendEntriesStatus = 2;
}

message ErrorResponse{
    int64 errorCode = 1;
    string errorMsg = 2;
}

message TimeoutNowRequest{
    string server_id = 1;
    string peer_id = 2;
    int64 term = 3;
}
message TimeoutNowResponse{
     int64 term = 1;
     bool success = 2;
}

message RequestVoteRequest {
     string server_id = 1;
     string peer_id = 2;
     int64 term = 3;
     int64 committed_log_term = 4;
     int64 committed_log_index = 5;
     bool pre_vote = 6;
};
message RequestVoteResponse {
     int64 term = 1;
     bool granted = 2;
     string peer_name = 3;
};


message RequestPreVoteRequest {
     string server_id = 1;
     string peer_id = 2;
     int64 pre_term = 3;
     int64 committed_log_index = 4;
     int64 committed_log_term = 5;
     bool pre_vote = 6;
     string peer_name = 7;
};
message RequestPreVoteResponse {
     int64 term = 1;
     bool granted = 2;
     string peer_name = 3;
};

message AppendEntriesRequestHeader {

     string server_id = 1;
     string peer_id = 2;
};


message AppendEntriesRequest {
     string group_id = 1;
     string server_id = 2;
     string peer_id = 3;
     int64 term = 4;
     int64 prev_log_term = 5;
     int64 prev_log_index = 6;
     EntryMeta entries = 7;
     int64 committed_index = 8;
     bytes data = 9;
     string address = 10;
     int32 port = 11;
     int32 taskPort = 12;
     int64 readIndex=13;
};

message AppendEntriesResponse {
     int64 term = 1;
     bool success = 2;
     int64 last_log_index = 3;
     string address = 4;
     int32 port = 5;
     string peerId = 6;
     int64 readIndex = 7;
     string reason = 8;
};
message ReadIndexRequest {
     string group_id = 1;
     string server_id = 2;
     bytes entries = 3;
     string peer_id = 4;
};

message ReadIndexResponse {
     int64 index = 1;
     bool success = 2;
};

message NotifyFollowerStableRequest{
     int64 lastIndex = 1;
     int64 firstIndex = 2;
     string peerId = 3;
     bool success = 4;

}
message NotifyFollowerStableResponse{
     int64 lastIndex = 1;
     int64 firstIndex = 2;
     int64 term = 3;
     bool success = 4;
}


message NotifyFollowerToApplyRequest{
     int64 lastIndex = 1;
     int64 firstIndex = 2;
     string peerId = 3;
     bool success = 4;

}
message NotifyFollowerToApplyResponse{
     int64 lastIndex = 1;
     int64 firstIndex = 2;
     int64 term = 3;
     string followerId = 4;
     bool success = 5;
}